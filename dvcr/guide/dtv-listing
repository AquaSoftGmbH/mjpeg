#!/usr/bin/python

import marshal
import httplib
import string
import time

def dtv_elements(line):
	if (line[:22] != "\\pard \\widctlpar\\intbl"):
		return

	line = line[string.index(line, "{"):string.index(line, "}")]
	line = line[string.index(line, " "):-1]

	tokens = string.split(line, "\\cell")
	temp = []
	for field in tokens:
		field = string.strip(field)
		temp.append(field)
	
	return temp

months = { "Jan" : "01", "Feb" : "02", "Mar" : "03", "Apr" : "04",
	   "May" : "05", "Jun" : "06", "Jul" : "07", "Aug" : "08",
	   "Sep" : "09", "Oct" : "10", "Nov" : "11", "Dec" : "12" }

def dtv_date(date):
	date = months[date[4:7]] + date[-2:]
	return date

def dtv_time(data):
	if (data[:2] == "12"):
		data = "00" + data[2:]

	if (data[-2:] == "AM"):
		return data[:5]
	
	if (data[-2:] == "PM"):
		return string.zfill(int(data[:2]) + 12, 2) + data[2:5]

	return data[:5]


def dtv_rtf(lines):
	last_chanel = "unknown"
	last_date = "unkown"

	dtv_lines = []

	for line in lines:
		if (line[:5] != "\\pard"):
			continue

		tokens = dtv_elements(line)
		if (tokens == None):
			continue

		if (tokens[0] == ""):
			tokens[0] = last_channel
		else:
			last_channel = tokens[0]

		if (tokens[1] == ""):
			tokens[1] = last_date
		else:
			last_date = dtv_date(tokens[1])
			tokens[1] = last_date

		tokens[0], tokens[1], tokens[2], tokens[3], tokens[4] = \
			tokens[1], tokens[2], tokens[0], tokens[3], tokens[4]

		tokens[1] = dtv_time(tokens[1])

		dtv_lines.append(tokens)

	return dtv_lines

def dtv_write(file_name, listing, stations):
	file = open(file_name, "w")
	marshal.dump(listing, file)
	marshal.dump(stations, file)


http = httplib.HTTP("206.17.88.15")
http.putrequest("GET", "/misc/pgm_guide/dtv_guide.rtf")
http.putheader("Accept", "text/html")
http.putheader("Accept", "text/plain");
http.endheaders()

errcode, errmsg, headers = http.getreply()
print errcode, errmsg, headers

data = http.getfile()
lines = string.split(data.read(), "\n")

dtv_lines = dtv_rtf(lines)

dtv_lines.sort()

last_date = dtv_lines[0][0]
today = time.strftime("%m%d", time.localtime(time.time()))

sched_time = {}
sched_station = {}
for tokens in dtv_lines:
	if (tokens[0] != last_date):
		if (today != last_date):
			dtv_write(last_date, sched_time, sched_station)
		sched_time = {}
		sched_station = {}
		last_date = tokens[0]

	key = tokens[0] + tokens[2][:3] + tokens[1]
	if (key[-2:] != "00" and key[-2:] != "30"):
		if (int(key[-2:]) < 30):
			key = key[:-2] + "00"
		else:
			key = key[:-2] + "30"
	sched_time[key] = tokens[1:5]
	if sched_station.has_key(tokens[2][:3]) == 0:
		sched_station[tokens[2][:3]] = tokens[2]

