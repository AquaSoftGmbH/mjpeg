Linux MPEG/MJPEG Audio/Video tools - MJPEG TOOLS
================================================

The lavtools stand for "Linux/Audio video tools" and are released
under the General GNU Public Licence, see the COPYING file for
details.

Required Software
-----------------

***
*** Software you *must* have installed
***

1) The GLib library - http://www.gtk.org
(libglib .... is included in the standard distributions)


2) The SDL library -  http://www.libsdl.org/
   I used SDL 1.1.6 for development, please tell me if the 
   new SDL versions won't compile with this software ! 

	Some rather tricky and difficult to repeat problems centred around the
	use of pre-compiled versions of this library.  If software
	playback crashes out on you immediately try compiling and
	installing SDL from source-code.

3) A reasonably up-to-date installation of the "xforms" library.  For
RedHat systems the xforms-0.88.1-1 rpm's (you need the -devel too) on
the RedHat rpm mirrors are known to work.

Irritatingly some older installation make the header "X11/forms.h" whilst
more recent ones use "forms.h".  If compilation stops with one of these
files missing make sure you have forms installed.  The 0.88.1-1 rpm's
for RedHat seem to work fine.

Warning: there's a bug in the Debian testing that means attempting to
install the xforms .deb tends to force dselect to deselect XFree86-4.0.x!
Be careful!

Hopefully in the next release xforms will be replaced by a more stable
library like gtk+.


4) The MMX enhanced jpeg library from the same place you got this package.

http://download.sourceforge.net/mjpeg/jpeg-mmx-0.1.3.tar.gz

The configure scripts look for this in same parent directory as the
directory containing this file, /usr/local/src/jpeg-mmx by default.
You can specify another directory using the --with-jpeg-mmx flag to
the ./configure script.

Experienced developers should note that you *need* this. libjpeg6
(libjpeg6a or 6b is included in the standard distributions) along with
the corresponding "jpegint.h" header file from the source code will
do. This header file is needed so that the colour-space conversion
routines to be used by the jpeg library can be correctly set for the
state of the X display.


Compile: 

./configure
make

Note do *not* "make install".

The configure script for mjpegtool looks for the library in 
/usr/local/src/jpeg-mmx by default.  If you unpacked and compiled it 
elsewhere use the --jpeg-mmx flag to tell it where.


5) The libmovtar library for handling audio/video streams in "movtar" format.
Very handy for hacking around, moving between formats, and experimentation.


http://download.sourceforge.net/mjpeg/libmovtar-0.1.2.tar.gz

Compile and install: 

./configure
make
make install     

You'll need to be able to write to /usr/local/lib and /usr/local/include
for the install.


6) A recent version of the "nasm" assembler for compiling the pure
assembly language routines in the MPEG encoder.

***
***
*** Software you'll find useful
***
***

1) Quicktime4Linux - http://heroine.linuxave.net/quicktime.html

If you want to be able to read/write/edit video in Quicktime
format you'll need Adam William's Quicktime librery.

The configure scripts look for this
/usr/local/src/quicktime.4linux-1.3 You can specify another directory
using the --with-quicktime flag to the ./configure script.

IMPORTANT NOTE:  Although you can compile mjpegtools with the stock
1.3 release this will prevent effective use of the MMX JPEG library
for software playback.  This is because Quicktime4linux includes its
own version of the JPEG library.   To make full use of the JPEG library
you need to prevent Quicktime4linux linking in its own JPEG library.
A (tiny) patch to the Quicktime4linux source that does this can be found

http://download.sourceforge.net/mjpeg/quicktime4linux-1.3.patch

If you want to make full use of the MMX JPEG lib apply this patch with 

patch < quicktime4linux-1.3.patch

before building quicktime4linux with

./configure
make


2) The "xawtv" Package for Linux TV

- Using the v4l-conf utility that comes with xawtv you can set-up the
Zoran hardware's frame-grabbing / displaying facilities to allow
Hardware accelerated playback under X-windows.   

- You can also watch TV using your Card using "xawtv".

- You can do software capture of raw (and compressed!) video if your
machine is fast enough.

3) The "toolame" MP2 encoder and the "sox" audio processing tool.

A remark regarding RPM packages: If you want to install RPM packages
instead, always keep in mind that you need to install the developer
versions.

(www.freshmeat.net is also a good source for all kind of Linux soft !)


4) If you want to transcode MPEG-2 video from DTV or DVD formats
you'll want to get the ac3dec and mpeg2dec decoder tools with the
appropriate output plugin's for producing streamed wav and lavtools
"yuv" format.  At the time of writing rapid change in both programs
code bases meant that the necessary patches hadn't been merged into
their main cvs branches / distributions.  As a stop-gap a couple of
working snapshots in tarball form can be found in the ftp files
area of mjpeg.sourceforge.net.

ftp://mjpeg.sourceforge.net/pub/mjpeg

***
***
*** How to build and install it...
***
***

If you're building from cvs rather than the distribution tarball do :

./autogen.sh

(This sets up the configuration script ./configure, 
 and runs it to autoconfigure and create the Makefile's)

Next configure

./configure

(Obviously you may want to pass flags if you're installing in
non-default places etc).  Frequently used options are 
--jpeg-mmx=<jpeg-mmx directory> and --with-quicktime=<quicktime directory>

make

(This actually compiles the programs).

Then (with root privileges if needed) :

make install


(This installs them in /usr/local/bin by default).

If you have installed Quicktime4Linux and/or the jpeg libraries in
unusual places you may need to run ./configure manually with
options set to tell it where they are.

You should now be able to run the lavtools and MPEG compressors at least.

For the best results you probably want to make the lavplay and lavrec
programs setuid root.  I.e. make them owned by root and set the "s"
bit permissions bit with chmod.  This will allow them to run key
threads with real-time priority.  Its not done by the installer as it
is a bit risky and we'd prefer people to be able to try it under
controlled conditions.

Have a look at the HINTS file to see how the lavtools (ought to ;) )
work ...  Have a look at the README for more detailed explanation of
the internals history and source-code layout

/Andrew <as@comlab.ox.ac.uk>
/Gernot <gz@lysator.liu.se>
/Ronald <rbultje@ronald.bitfreak.net>

