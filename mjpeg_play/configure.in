
dnl Process this file with autoconf to produce a configure script.
AC_INIT(lavtools/lav_io.c)


AM_INIT_AUTOMAKE(mjpegtools, 1.3b)
AM_MAINTAINER_MODE


dnl Checks for programs.
dnl AM_PROG_LIBTOOL
AC_PROG_CC
AC_PROG_RANLIB


dnl ---------------------------------------------------------------------       
dnl X11 checks                                                                                                                                                  
AC_PATH_XTRA                                                                    
if test "-DX_DISPLAY_MISSING" = "$X_CFLAGS"; then                                 
AC_MSG_ERROR(can not find X11)                                                
fi                                                                              
AC_SUBST(X_CFLAGS)                                                              
AC_SUBST(X_PRE_LIBS)                                                            
AC_SUBST(X_EXTRA_LIBS)                                                          
AC_SUBST(X_LIBS)                                                                
AC_SUBST(x_libraries)                                                           

dnl Checks for header files.
dnl AC_HEADER_STDC
dnl AC_CHECK_HEADERS(fcntl.h unistd.h)

dnl Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_C_INLINE
AC_TYPE_SIZE_T

dnl Checks for library functions.
AC_TYPE_SIGNAL

dnl Check for GLib
AM_PATH_GLIB(1.2.0)
dnl AC_SUBST(GLIB_CFLAGS)
dnl AC_SUBST(GLIB_LIBS)


dnl -- Quicktime checks --
dnl N.b. quicktime currently embeds an mmx jpeg, so we don't
dnl bother looking for an external one if we link it in.

have_jpeg="no"

if test -r ../quicktime
then
  DEFAULT_QUICKTIME_LIBDIR=`pwd`/../quicktime
else
  if test -r /usr/local/src/quicktime
    then
      DEFAULT_QUICKTIME_LIBDIR=/usr/local/src/quicktime
    else
      DEFAULT_QUICKTIME_LIBDIR=/usr/local/src/quicktime4linux-1.2
    fi
fi

AC_ARG_WITH(quicktime, [  --with-quicktime=PFX  Where to find the quicktime source dir [/usr/local/src/quicktime] ], 
    QUICKTIME_LIBDIR="$withval", 
    QUICKTIME_LIBDIR="$DEFAULT_QUICKTIME_LIBDIR")

OLDLIBS="$LIBS"
LIBS="-L /usr/local/lib -L $QUICKTIME_LIBDIR $LIBS"
AC_SUBST(QUICKTIME_INCLUDE)
AC_SUBST(JPEG_INCLUDE)
AC_CHECK_LIB( quicktime, quicktime_open,
	          [ 
		        AC_DEFINE(BUILD_QUICKTIME)
				LIBS="$LIBS -lquicktime"
			    QUICKTIME_INCLUDE="-I ${QUICKTIME_LIBDIR}"
				JPEG_INCLUDE=""	
			    have_quicktime="yes"
				have_jpeg="yes"	
			    
		      ],
			  [ 
	            LIBS="$OLDLIBS"
				have_quicktime="no"
			  ],
			  -lm -lz -lpng -lpthread `glib-config --libs --cflags`
			 )

dnl No jpeg yet... try for a local jpeg-mmx first!
if test ${have_jpeg} = "no"
then
AC_CHECK_LIB( jpeg-mmx, jpeg_start_compress,
             	[	 
  			   		have_jpeg="yes"
					JPEG_INCLUDE="-I /usr/local/include"
 		     	],
             	[
             		have_jpeg="no"
		     	]
			)
fi

dnl If that can't be found fall back to the system jpeg lib...
if test ${have_jpeg} = "no"
then
AC_CHECK_LIB( jpeg, jpeg_start_compress,
             	[	 
  			   		have_jpeg="yes"
 		     	],
             	[
             		have_jpeg="no"
		     	]
			)
fi


dnl Check for SDL

if test $have_jpeg = "yes"
then
AM_PATH_SDL(1.1.3, 
			[ AC_DEFINE(BUILD_MJPEG)
			  LIBS="$LIBS -lSDL"
			  have_sdl="yes"
			],
			[ 
			  have_sdl="no"	
			  echo "*** Software MJPEG wont be built - SDL not available"
			]
	       )
else
    echo "*** Software MJPEG wont be built - jpeg not available"
fi



dnl Misc. other libraries
AC_CHECK_LIB(pthread, pthread_create)
AC_CHECK_LIB(png,png_read_info,
               [       
                  AC_DEFINE(BUILD_PNG)
                   LIBS="$LIBS -lpng -lz"
               ], 

              [  
                  LIBS="$OLDLIBS"   
              ],  
              -lz 
       ) 

AC_CHECK_LIB(glib,g_strsplit)

	            

dnl
dnl Check for type of SIMD support and machine specific optimisation
dnl flags (currently only MMX/SSE on x86)
dnl 
AC_SUBST(MTYPEFLAGS)
AC_ARG_ENABLE(x86-cpu,
	         [ --enable-x86-cpu   Force support x86 CPU's SIMD features],
	         [ hwaretype=i586 ],
             [ hwaretype=`uname --machine`]
			)

case "${hwaretype}" in
i686) 
	x86cpu="yes"
    MTYPEFLAGS="-DX86_CPU -mpentiumpro"
	echo "Compiling in MMX/SSE support for PPro (or better) CPU"
;;
i586) 
	x86cpu="yes"
	MTYPEFLAGS="-DX86_CPU -mpentium"
	echo "Compiling in MMX/SSE support for Pentium CPU"
;;
*) x86cpu="no"
   MTYPEFLAGS=""
   echo "Non x86 CPU: no MMX/SSE code will be included"
;;
esac



AM_PATH_MOVTAR(0.0.2, 
	[
		AC_DEFINE(BUILD_MOVTAR)		
		have_movtar="yes"
	],
	have_movtar="no")
AC_SUBST(MOVTAR_CFLAGS)
AC_SUBST(MOVTAR_LIBS)

AM_CONDITIONAL(X86CPU, test $x86cpu=yes   )


AC_OUTPUT(Makefile
    lavtools/Makefile
	mjpeg/Makefile
	mpeg2enc/Makefile
	aenc/Makefile
	mplex/Makefile
    )

echo ""
echo " MJPEG tools ${VERSION} build configuration :"
echo ""
echo "    - software MJPEG playback     : ${have_sdl}"
echo "    - movtar playback/recording   : ${have_movtar}"
echo "    - Quicktime playback/recording: ${have_quicktime}"
echo "    - AVI MJPEG playback/recording: yes (always)"
echo ""












