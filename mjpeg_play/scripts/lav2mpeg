#!/bin/bash

#
# A convenient front-end for the various mpeg encoding tools.
# Allows "1 command" production of a video stream...
# 

function tidy_exit ()
{
	rm -f $tidyfile
	exit 0
}

scale=0
kind=avi
stereo=1
quality=""
search=16
noise=""
bitdrop=""
test=""
thresh="-t"
MPEGENC=mpeg2enc
MPLEX=mplex
dst=""
conc="0"
mplexflags="-f 0"

while getopts ":s:q:n:d:o:MQSVTRNtcv" opt
do
case $opt in
s) scale=$OPTARG
  echo Setting scaling option to $OPTARG
;;
q) quality=$OPTARG
  echo Setting quality factor to $quality
;;
M) quality="-b 1450"
  mplexflags="-b 60"
  echo "Setting medium-quality (1550Kbps) mode"
;;
Q) quality="-b 1800"
  mplexflags="-b 70"
  echo "Setting high-quality (1800Kbps) mode"
;;
S) quality="-b 2000"
  mplexflags="-b 80"
  echo "Setting super high-quality (2000kbps) mode"
;;
V)
  quality="-q 7 -b 3000 -v 240"
  mplexflags="-V -b 300"
  echo  "Using variable bitrate (quantisation floor)"
  echo "WARNING: don't expect this to work with hardware players!"
;;
T) echo "Using test encoder and multiplexer"
MPEGENC="mpeg2enc.test"
MPLEX="mplex.test"
test=""
;;
R) echo "Using reference encoder"
MPEGENC="mpeg2enc.ref"
;;
t) echo "Activating hi-res quantisation matrix"
thresh="-h"
;;
n) echo "Setting noise filter $OPTARG"
noise="-n $OPTARG"
;;
d) echo "Setting bit-drop to $OPTARG"
bitdrop="-d $OPTARG"
;;
o) echo "Setting destination directory to $OPTARG"
dst=$OPTARG
;;
c) echo "Concurrent mode - > 1 avi2mpeg's can run on a file set without repeated work"
conc=1
;;
v) echo "VCD mode - VCD compliant multiplexing"
if [ -n "$quality" ]
then
    echo
    echo
    echo "WARNING: VCD often won't play unless you use the standard VCD"
    echo "WARNING: rate of 1152Kbps (default setting)"
    echo
    sleep 3
    mplexflags = "-f 1"
fi
;;
?)
  echo "Usage: avi2mpeg [-s num] [-d num] [-n num] [-S] [-Q] [-M] [-V] [-t] [-c] [-o dstdir] srcfile ..."
  echo "Q - High quality mode (1800Kbps video)"
  echo "S - Super high quality mode (2000Kbps video)"
  echo "M - Medium high quality mode (1450Kbps video)"
  echo "V - Variable bit rate [2400bps ceiling, quantisation floor 4]"
  echo "Default is 1152 Kbps video (VCD compliant)"
  echo "c - Concurrent mode - allow multiple avi2mpeg's to work on the"
  echo "    same file set without repeating work"
  echo "v   VCD generation mode.  Force  the final result to be multiplexed"
  echo "    in the format required by VCD's."

exit 1
;;
esac
done


if [ $stereo = 1 ]
then
   aencbpr=224
else
  aencbpr=112
fi

shift $[$OPTIND-1]

trap tidy_exit SIGINT
trap tidy_exit SIGHUP

echo -n "Encoding commences "
date

for f in $*
do
  fname=${f%.*}
  kind=${f##${fname}.}
  if [ ! x${dst} = "x" ]
  then
    fname=${f##*/}
    r=${dst}/${fname%%.${kind}}
  else
    r=${fname}
  fi
  mpgfile=${r}.%d.mpg
  if [ ! ${conc} = 1 -o ! -f ${r}.m1v ]
  then
    if [ ${conc} = 1 ]
    then
      tidyfile=${r}.m1v
    fi
    lav2yuv -s ${scale} ${noise} $f | buffer -b 4M | ${MPEGENC} -m 1 ${quality}  ${test}  ${thresh} -r ${search}  -o ${r}.m1v
    if [ ! $? = 0 ]
    then
       exit $?
    fi

    if [ ! ${conc} = 1 -o ! -f ${r}.mp2 ]
    then
      if [ $conc = 1 ]
      then
        tidyfile=${r}.mp2
      fi
		# Don't mux / aenc two at once - screws up NFS...
		while [ -r ${r%%.*}.mux ]
		do
		  sleep 30
		done
		# You probably want to replace this with toolame
		# See "transcode" for suitable flags
      nice -n 15 aenc -b ${aencbpr} $f -o ${r}.mp2
    fi
	# Don't mux / aenc two at once - screws up NFS...
	while [ -r ${r%%.*}.mux ]
	do
	sleep 30
    done
	echo  > ${r%%.*}.mux
     nice -n 15 ${MPLEX} -q ${mplexflags} ${r}.m1v ${r}.mp2 ${mpgfile} 
     rm -f ${r%%.*}.mux
# Uncomment this if you want the raw files delete
#	 rm -f  ${r}.m1v ${r}.mp2
  fi
done

